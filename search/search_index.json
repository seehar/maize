{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u7b80\u4ecb\u53ca\u5b89\u88c5","text":"<p>maize \u662f\u4e00\u4e2a\u57fa\u4e8e\u5f02\u6b65\uff0c\u8f7b\u91cf\u7ea7 Python \u722c\u866b\u6846\u67b6</p>"},{"location":"#_2","title":"\u73af\u5883\u8981\u6c42","text":"<ul> <li>Python 3.10+</li> <li>Linux, Windows, macOS</li> </ul>"},{"location":"#_3","title":"\u5b89\u88c5","text":"pippoetry <pre><code>pip install maize\n</code></pre> <pre><code>poetry add maize\n</code></pre>"},{"location":"#_4","title":"\u722c\u866b\u793a\u4f8b","text":"<p>\u5355\u722c\u866b</p> <pre><code>from maize import Spider\n\n\nclass DecoratorSpider(Spider):\n    start_url = \"http://www.baidu.com\"\n\n    def parse(self, response):\n        print(response.text)\n\n\nif __name__ == \"__main__\":\n    DecoratorSpider().run()\n</code></pre> <p>\u88c5\u9970\u5668\u542f\u52a8\u722c\u866b</p> <pre><code>from maize import Spider, SpiderEntry\n\n\nspider_entry = SpiderEntry()\n\n\n@spider_entry.register()\nclass DecoratorSpider(Spider):\n    start_url = \"http://www.baidu.com\"\n\n    def parse(self, response):\n        print(response.text)\n\n\nif __name__ == \"__main__\":\n    spider_entry.run()\n</code></pre>"},{"location":"quick_start/","title":"\u5feb\u901f\u4e0a\u624b","text":""},{"location":"quick_start/#spider","title":"\u521b\u5efa spider","text":"<p>\u4ee5\u767e\u5ea6\u722c\u866b\u4e3a\u4f8b\uff0c\u5b9e\u73b0\u4e00\u4e2a\u6700\u5c0f\u7684\u722c\u866b\u9879\u76ee</p> <pre><code>import asyncio\nfrom maize import CrawlerProcess, Spider\n\n\nclass BaiduSpider(Spider):\n    start_urls = [\"http://www.baidu.com\"]\n\n    async def parse(self, response):\n        print(f\"parse: {response}\")\n\n\nasync def run():\n    process = CrawlerProcess()\n    await process.crawl(BaiduSpider)\n    await process.start()\n\n\nif __name__ == '__main__':\n    asyncio.run(run())\n</code></pre>"},{"location":"quick_start/#_2","title":"\u4e0b\u53d1\u65b0\u4efb\u52a1","text":"<p><code>parse</code> \u4e2d\u652f\u6301\u4e0b\u53d1\u65b0\u4efb\u52a1\uff0c\u53ea\u9700\u8981 <code>yield Request</code> \u5373\u53ef\u3002\u793a\u4f8b\u5982\u4e0b</p> <pre><code>from maize import Request\n\nasync def parse(self, response):\n    yield Request(url=\"url\")  # \u4e0d\u6307\u5b9a callback\uff0c\u4efb\u52a1\u4f1a\u9ed8\u8ba4\u8c03\u5ea6\u5230 parse \u4e0a\n    yield Request(url=\"url\", callback=self.parse_page)  # \u6307\u5b9a callback\uff0c\u4efb\u52a1\u7531 callback \u6307\u5b9a\u7684\u51fd\u6570\u89e3\u6790\u3002\u6ce8\u610f\uff0c\u9700\u8981\u5f02\u6b65\u51fd\u6570\n</code></pre>"},{"location":"quick_start/#_3","title":"\u722c\u866b\u914d\u7f6e","text":"<p>\u722c\u866b\u914d\u7f6e\u652f\u6301\u81ea\u5b9a\u4e49\u914d\u7f6e\u6216\u5f15\u5165\u914d\u7f6e\u6587\u4ef6setting.py\u7684\u65b9\u5f0f\u3002 \u914d\u7f6e\u6587\u4ef6\uff1a\u5728\u5de5\u4f5c\u533a\u95f4\u7684\u6839\u76ee\u5f55\u4e0b\u5f15\u5165setting.py\uff0c\u5177\u4f53\u53c2\u8003\u9ed8\u8ba4\u914d\u7f6e\u6587\u4ef6</p> <pre><code>spider\n    baidu_spider.py\n    ...\nsettings.py  # \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u914d\u7f6e\u6587\u4ef6\u9700\u4e0e run.py \u540c\u7ea7\u522b\nrun.py\n</code></pre> <p>\u81ea\u5b9a\u4e49\u914d\u7f6e\uff1a\u4f7f\u7528\u7c7b\u53d8\u91cf <code>custom_settings</code></p> <pre><code>class BaiduSpider(Spider):\n    custom_settings = {  # \u81ea\u5b9a\u4e49\u914d\u7f6e\n        \"CONCURRENCY\": 1,  # \u5e76\u53d1\u6570\n    }\n</code></pre> <p>\u914d\u7f6e\u4f18\u5148\u7ea7\uff1a\u81ea\u5b9a\u4e49\u914d\u7f6e &gt; \u914d\u7f6e\u6587\u4ef6\uff0c\u5373\u81ea\u5b9a\u4e49\u914d\u7f6e\u4f1a\u8986\u76d6\u914d\u7f6e\u6587\u4ef6\u91cc\u7684\u914d\u7f6e\u4fe1\u606f\uff0c\u4e0d\u8fc7\u81ea\u5b9a\u4e49\u914d\u7f6e\u53ea\u5bf9\u81ea\u5df1\u6709\u6548\uff0c\u914d\u7f6e\u6587\u4ef6\u53ef\u4ee5\u662f\u591a\u4e2a\u722c\u866b\u516c\u7528\u7684</p>"},{"location":"quick_start/#_4","title":"\u52a0\u5feb\u91c7\u96c6","text":"<p>\u4fee\u6539\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u5e76\u53d1\u6570 <code>CONCURRENCY</code> \u5373\u53ef</p>"},{"location":"quick_start/#_5","title":"\u81ea\u5b9a\u4e49\u4e0b\u8f7d\u5668","text":"<p>\u5185\u7f6e\u57fa\u4e8e <code>aiohttp</code> \u548c <code>httpx</code> \u7684\u4e24\u79cd\u4e0b\u8f7d\u5668\u3002\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u4fee\u6539</p> <pre><code>DOWNLOADER = \"maize.AioHttpDownloader\"  # \u57fa\u4e8e aiohttp \u7684\u4e0b\u8f7d\u5668\nDOWNLOADER = \"maize.HTTPXDownloader\"    # \u57fa\u4e8e httpx \u7684\u4e0b\u8f7d\u5668\n</code></pre> <p>\u4e0b\u8f7d\u5668\u662f\u63d2\u62d4\u5f0f\u7684\u8bbe\u8ba1\uff0c\u60a8\u53ef\u4ee5\u5f88\u5bb9\u6613\u66ff\u6362\u4e3a\u81ea\u5b9a\u4e49\u7684\u4e0b\u8f7d\u5668\u3002\u7ee7\u627f <code>BaseDownloader</code> \u5b9e\u73b0 <code>download</code> \u548c <code>structure_response</code> \u4e24\u4e2a\u65b9\u6cd5\u3002 \u5c06\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684 <code>DOWNLOADER</code> \u7684\u8def\u5f84\u66ff\u6362\u4e3a\u60a8\u81ea\u5b9a\u4e49\u4e0b\u8f7d\u5668\u7684\u8def\u5f84\u3002\u793a\u4f8b\uff1a</p> <pre><code>import typing\n\nfrom maize import BaseDownloader, Request, Response\n\n\nclass CustomDownloader(BaseDownloader):\n\n    async def download(self, request: Request) -&gt; typing.Optional[Response]:\n        pass\n\n    @staticmethod\n    def structure_response(request: Request, response: typing.Any, body: bytes) -&gt; Response:\n        pass\n</code></pre> <p>\u60a8\u4e5f\u53ef\u4ee5\u4e0d\u7ee7\u627f <code>BaseDownloader</code>\uff0c\u9700\u8981\u5728\u81ea\u5b9a\u4e49\u4e0b\u8f7d\u5668\u4e2d\u5b9e\u73b0\u8fd9\u51e0\u4e2a\u65b9\u6cd5\uff1a<code>fetch</code>, <code>download</code>, <code>create_instance</code>, <code>close</code>, <code>idle</code>\u3002 \u4f46\u662f\u6211\u4eec\u5efa\u8bae\u60a8\u7ee7\u627f <code>BaeDownloader</code> \u6765\u5b9e\u73b0\u81ea\u5b9a\u4e49\u4e0b\u8f7d\u5668</p>"},{"location":"quick_start/#_6","title":"\u81ea\u5b9a\u4e49\u65e5\u5fd7\u6a21\u5757","text":"<p><code>maize</code> \u7684\u65e5\u5fd7\u9ed8\u8ba4\u4f7f\u7528 <code>Python</code> \u81ea\u5e26\u7684 <code>logging</code> \u6a21\u5757\u3002 \u4f46\u662f\u60a8\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u66ff\u6362\u4e3a\u60a8\u60f3\u7528\u7684\u65e5\u5fd7\u6a21\u5757\uff0c\u6bd4\u5982 <code>loguru</code>\u3002\u793a\u4f8b\uff1a</p> <pre><code>import logging\nimport sys\n\nfrom loguru import logger as loguru_logger\n\n\nclass InterceptHandler(logging.Handler):\n    def __init__(self):\n        super().__init__()\n        self.logger = loguru_logger\n        self.logger.remove()\n        self.logger.add(\n            sys.stdout,\n            level=\"DEBUG\",\n            format=\"&lt;green&gt;{time:YYYY-MM-DD HH:mm:ss.SSS}&lt;/green&gt; | \"  # \u989c\u8272&gt;\u65f6\u95f4\n            \"{process.name} | \"  # \u8fdb\u7a0b\u540d\n            \"{thread.name} | \"  # \u8fdb\u7a0b\u540d\n            \"&lt;cyan&gt;{module}&lt;/cyan&gt;.&lt;cyan&gt;{function}&lt;/cyan&gt;\"  # \u6a21\u5757\u540d.\u65b9\u6cd5\u540d\n            \":&lt;cyan&gt;{line}&lt;/cyan&gt; | \"  # \u884c\u53f7\n            \"&lt;level&gt;{level}&lt;/level&gt;: \"  # \u7b49\u7ea7\n            \"&lt;level&gt;{message}&lt;/level&gt;\",  # \u65e5\u5fd7\u5185\u5bb9\n        )\n\n    def emit(self, record: logging.LogRecord):\n        logger_opt = self.logger.opt(depth=6, exception=record.exc_info)\n        logger_opt.log(record.levelname, record.getMessage())\n</code></pre> <p>\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u60a8\u7684\u65e5\u5fd7\u6a21\u5757</p> <pre><code>LOGGER_HANDLER = \"the.logger.path.InterceptHandler\"  # \u8bf7\u66ff\u6362\u4e3a\u5b9e\u9645\u8def\u5f84\n</code></pre>"},{"location":"features/downloader/","title":"Downloader \u4e0b\u8f7d\u5668","text":""},{"location":"features/downloader/#_1","title":"\u4e0b\u8f7d\u5668\u5217\u8868","text":"<p><code>maize</code> \u5185\u7f6e\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u4e0b\u8f7d\u5668\uff1a</p> <ul> <li><code>maize.AioHttpDownloader</code>: \u57fa\u4e8e aiohttp \u5c01\u88c5\u7684\u4e0b\u8f7d\u5668</li> <li><code>maize.HTTPXDownloader</code>: \u57fa\u4e8e httpx \u5c01\u88c5\u7684\u4e0b\u8f7d\u5668</li> <li><code>maize.downloader.playwright_downloader.PlaywrightDownloader</code>: \u57fa\u4e8e playwright \u5c01\u88c5\u7684\u4e0b\u8f7d\u5668</li> </ul>"},{"location":"features/downloader/#_2","title":"\u81ea\u5b9a\u4e49\u4e0b\u8f7d\u5668","text":"<p>\u5982\u679c\u4f7f\u7528\u8fc7\u7a0b\u4e2d\uff0c\u6709\u7279\u6b8a\u9700\u6c42\uff0c\u9700\u8981\u81ea\u5b9a\u4e49\u4e0b\u8f7d\u5668\uff0c\u53ef\u4ee5\u7ee7\u627f <code>BaseDownloader</code> \u5b9e\u73b0\u81ea\u5b9a\u4e49\u4e0b\u8f7d\u5668\u3002</p> <pre><code>import typing\n\nfrom maize import BaseDownloader, Request, Response\n\nif typing.TYPE_CHECKING:\n    from maize.core.crawler import Crawler\n\n\nclass CustomDownloader(BaseDownloader):\n\n    def __init__(self, crawler: \"Crawler\"):\n        super().__init__(crawler)\n\n    async def open(self):\n        await super().open()\n        # \u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u521d\u59cb\u5316\u81ea\u5b9a\u4e49\u4e0b\u8f7d\u5668\n\n    async def close(self):\n        await super().close()\n        # \u60a8\u53ef\u4ee5\u5728\u8fd9\u91cc\u5173\u95ed\u81ea\u5b9a\u4e49\u4e0b\u8f7d\u5668\n\n    async def download(self, request: Request) -&gt; typing.Optional[Response]:\n        \"\"\"\n        \u5b9e\u73b0\u81ea\u5b9a\u4e49\u4e0b\u8f7d\u903b\u8f91\n        :param request: \u8bf7\u6c42\u5bf9\u8c61\n        :return: \u54cd\u5e94\u5bf9\u8c61\n        \"\"\"\n\n    @staticmethod\n    def structure_response(\n        request: Request, response: typing.Any, body: bytes\n    ) -&gt; Response:\n        \"\"\"\n        \u6784\u9020\u54cd\u5e94\u5bf9\u8c61\n        :param request: \u8bf7\u6c42\u5bf9\u8c61\n        :param response: \u81ea\u5b9a\u4e49\u54cd\u5e94\uff0c\u60a8\u53ef\u4ee5\u4fee\u6539\u5bf9\u8c61\u4e3a\u60a8\u9700\u8981\u7684\u683c\u5f0f\n        :param body: \u54cd\u5e94\u4f53\n        :return: \u54cd\u5e94\u5bf9\u8c61\n        \"\"\"\n\n    async def process_error_request(self, request: Request):\n        \"\"\"\n        \u5904\u7406\u8d85\u8fc7\u6700\u5927\u91cd\u8bd5\u6b21\u6570\u7684\u8bf7\u6c42\u3002\n        \u6b64\u65b9\u6cd5\u4e0d\u5f3a\u5236\u5b9e\u73b0\uff0c\u5982\u679c\u60a8\u672a\u5b9e\u73b0\uff0c\u5219\u4e22\u5f03\u8d85\u8fc7\u6700\u5927\u91cd\u8bd5\u6b21\u6570\u7684\u8bf7\u6c42\u3002\n        :param request:\n        :return:\n        \"\"\"\n</code></pre>"},{"location":"features/downloader/#_3","title":"\u793a\u4f8b","text":"<p>\u60a8\u4e5f\u53ef\u4ee5\u53c2\u8003 <code>maize.AioHttpDownloader</code> \u7684\u6e90\u7801\u5b9e\u73b0\uff0c\u60a8\u7684\u4e0b\u8f7d\u5668\u9700\u8981\u4f7f\u7528\u5f02\u6b65\u7684\u65b9\u5f0f\uff0c\u5426\u5219\u65e0\u6cd5\u53d1\u6325 <code>maize</code> \u7684\u6027\u80fd\u3002</p> <pre><code>import typing\n\nfrom aiohttp import BaseConnector\nfrom aiohttp import BasicAuth\nfrom aiohttp import ClientResponse\nfrom aiohttp import ClientSession\nfrom aiohttp import ClientTimeout\nfrom aiohttp import TCPConnector\nfrom aiohttp import TraceConfig\nfrom aiohttp import TraceRequestStartParams\n\nfrom maize.downloader.base_downloader import BaseDownloader\nfrom maize.common.http.request import Request\nfrom maize.common.http import Response\n\nif typing.TYPE_CHECKING:\n    from maize.core.crawler import Crawler\n\n\nclass AioHttpDownloader(BaseDownloader):\n    def __init__(self, crawler: \"Crawler\"):\n        super().__init__(crawler)\n        self.session: typing.Optional[ClientSession] = None\n        self.connector: typing.Optional[BaseConnector] = None\n\n        self._verify_ssl: typing.Optional[bool] = None\n        self._timeout: typing.Optional[ClientTimeout] = None\n        self._use_session: typing.Optional[bool] = None\n        self.trace_config: typing.Optional[TraceConfig] = None\n\n        self.proxy_tunnel: typing.Optional[str] = None\n        self.proxy_auth: typing.Optional[BasicAuth] = None\n\n    async def open(self):\n        await super().open()\n\n        request_timeout = self.crawler.settings.getint(\"REQUEST_TIMEOUT\")\n        self._timeout = ClientTimeout(total=request_timeout)\n        self._verify_ssl = self.crawler.settings.getbool(\"VERIFY_SSL\")\n        self._use_session = self.crawler.settings.getbool(\"USE_SESSION\")\n\n        self.proxy_tunnel = self.crawler.settings.get(\"PROXY_TUNNEL\")\n        proxy_tunnel_username = self.crawler.settings.get(\"PROXY_TUNNEL_USERNAME\")\n        proxy_tunnel_password = self.crawler.settings.get(\"PROXY_TUNNEL_PASSWORD\")\n        if proxy_tunnel_username and proxy_tunnel_password:\n            self.proxy_auth = BasicAuth(proxy_tunnel_username, proxy_tunnel_password)\n\n        self.connector = TCPConnector(verify_ssl=self._verify_ssl)\n        self.trace_config = TraceConfig()\n        self.trace_config.on_request_start.append(self.request_start)\n        if self._use_session:\n            self.session = ClientSession(\n                connector=self.connector,\n                timeout=self._timeout,\n                trace_configs=[self.trace_config],\n            )\n\n    async def download(self, request: Request) -&gt; typing.Optional[Response | Request]:\n        try:\n            if self._use_session:\n                response = await self.send_request(self.session, request)\n                body = await response.content.read()\n\n            else:\n                connector = TCPConnector(verify_ssl=self._verify_ssl)\n                async with ClientSession(\n                        connector=connector,\n                        timeout=self._timeout,\n                        trace_configs=[self.trace_config],\n                ) as session:\n                    response = await self.send_request(session, request)\n                    body = await response.content.read()\n\n        except Exception as e:\n            if new_request := await self._download_retry(request, e):\n                return new_request\n\n            self.logger.error(f\"Error during request: {e}\")\n            return None\n\n        return self.structure_response(request, response, body)\n\n    @staticmethod\n    def structure_response(\n            request: Request, response: ClientResponse, body: bytes\n    ) -&gt; Response:\n        return Response(\n            url=request.url,\n            headers=dict(response.headers),\n            status=response.status,\n            body=body,\n            request=request,\n        )\n\n    async def send_request(\n            self, session: ClientSession, request: Request\n    ) -&gt; ClientResponse:\n        if request.proxy_username and request.proxy_password:\n            proxy_auth = BasicAuth(request.proxy_username, request.proxy_password)\n        else:\n            proxy_auth = self.proxy_auth\n\n        return await session.request(\n            method=request.method,\n            url=request.url,\n            params=request.params,\n            data=request.data,\n            headers=request.headers,\n            cookies=request.cookies,\n            proxy=request.proxy or self.proxy_tunnel,\n            proxy_auth=proxy_auth,\n        )\n\n    async def request_start(\n            self, _session, _trace_config_ctx, params: TraceRequestStartParams\n    ):\n        self.logger.debug(\n            rf\"request downloading: {params.url}, method: {params.method}\"\n        )\n\n    async def close(self):\n        await super().close()\n        if self.connector:\n            await self.connector.close()\n\n        if self.session:\n            await self.session.close()\n</code></pre>"},{"location":"features/item/","title":"Item","text":"<p>\u89e3\u6790\u54cd\u5e94\u540e\uff0c\u9700\u8981\u8fd4\u56de <code>Item</code> \u7c7b\u578b\u7684\u6570\u636e\uff0c\u89e6\u53d1\u6570\u636e\u81ea\u52a8\u5165\u5e93\u3002 \u81ea\u5b9a\u4e49\u7684 <code>Item</code> \u9700\u8981\u7ee7\u627f <code>maize</code> \u7684 <code>Item</code> \u7c7b\uff0c\u5b57\u6bb5\u5b9a\u4e49\u4e3a <code>Field</code>\u3002\u793a\u4f8b\uff1a</p> <pre><code>from maize import Field, Item\n\n\nclass BaiduItem(Item):\n    #  __table_name__ = \"table_name\"  # \u8868\u540d\uff0c\u81ea\u52a8\u5165\u5e93\u65f6\u5fc5\u987b\u8bbe\u7f6e\n    url: str = Field()\n    title: str = Field(default=\"\u9ed8\u8ba4\u6807\u9898\")\n</code></pre> <p>\u5728 <code>Spider</code> \u7684 <code>parse</code> \u4e2d</p> <pre><code>from maize import Spider\n\n\nclass BaiduSpider(Spider):\n    start_urls = [\"http://www.baidu.com\"]\n\n    async def parse(self, response):\n        # \u89e3\u6790\u6216\u5904\u7406 response\n        item = BaiduItem()\n        item[\"url\"] = \"https://www.baidu.com\"\n        item[\"title\"] = \"\u767e\u5ea6\u4e00\u4e0b\"\n        yield item\n</code></pre>"},{"location":"features/item/#_1","title":"\u4f7f\u7528\u65b9\u5f0f","text":""},{"location":"features/item/#_2","title":"\u50cf\u5b57\u5178\u4e00\u6837\u4f7f\u7528","text":"<pre><code>item = BaiduItem()\nitem[\"url\"] = \"https://www.baidu.com\"\nitem[\"title\"] = \"\u767e\u5ea6\u4e00\u4e0b\"\nprint(item[\"url\"])\nprint(item[\"title\"])\n</code></pre>"},{"location":"features/item/#_3","title":"\u50cf\u5c5e\u6027\u4e00\u6837\u4f7f\u7528","text":"<pre><code>item = BaiduItem()\nitem.url = \"https://www.baidu.com\"\nitem.title = \"\u767e\u5ea6\u4e00\u4e0b\"\nprint(item.url)\nprint(item.title)\n</code></pre>"},{"location":"features/log/","title":"\u65e5\u5fd7\u914d\u7f6e\u53ca\u4f7f\u7528","text":"<p><code>maize</code> \u7684\u65e5\u5fd7\u9ed8\u8ba4\u4f7f\u7528 <code>Python</code> \u81ea\u5e26\u7684 <code>logging</code> \u6a21\u5757\u3002 \u4f46\u662f\u60a8\u53ef\u4ee5\u5f88\u65b9\u4fbf\u7684\u66ff\u6362\u4e3a\u60a8\u60f3\u7528\u7684\u65e5\u5fd7\u6a21\u5757\uff0c\u6bd4\u5982 <code>loguru</code>\u3002\u793a\u4f8b\uff1a</p> <pre><code>import logging\nimport sys\n\nfrom loguru import logger as loguru_logger\n\n\nclass InterceptHandler(logging.Handler):\n    def __init__(self):\n        super().__init__()\n        self.logger = loguru_logger\n        self.logger.remove()\n        self.logger.add(\n            sys.stdout,\n            level=\"DEBUG\",  # \u8bf7\u6ce8\u610f\uff0c\u6b64\u5904\u7684\u65e5\u5fd7\u7ea7\u522b\u4f1a\u8986\u76d6\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u65e5\u5fd7\u7ea7\u522b\n            format=\"&lt;green&gt;{time:YYYY-MM-DD HH:mm:ss.SSS}&lt;/green&gt; | \"  # \u65f6\u95f4\n            \"{process.name} | \"  # \u8fdb\u7a0b\u540d\n            \"{thread.name} | \"  # \u8fdb\u7a0b\u540d\n            \"&lt;cyan&gt;{module}&lt;/cyan&gt;.&lt;cyan&gt;{function}&lt;/cyan&gt;\"  # \u6a21\u5757\u540d.\u65b9\u6cd5\u540d\n            \":&lt;cyan&gt;{line}&lt;/cyan&gt; | \"  # \u884c\u53f7\n            \"&lt;level&gt;{level}&lt;/level&gt;: \"  # \u7b49\u7ea7\n            \"&lt;level&gt;{message}&lt;/level&gt;\",  # \u65e5\u5fd7\u5185\u5bb9\n        )\n\n    def emit(self, record: logging.LogRecord):\n        logger_opt = self.logger.opt(depth=6, exception=record.exc_info)\n        logger_opt.log(record.levelname, record.getMessage())\n</code></pre> <p>\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6307\u5b9a\u60a8\u7684\u65e5\u5fd7\u6a21\u5757</p> <pre><code>LOGGER_HANDLER = \"the.logger.path.InterceptHandler\"  # \u8bf7\u66ff\u6362\u4e3a\u5b9e\u9645\u8def\u5f84\n</code></pre>"},{"location":"features/mysql_util/","title":"MysqlUtil","text":"<p><code>MysqlUtil</code> \u662f\u4e00\u4e2a\u57fa\u4e8e <code>aiomysql</code> \u7684\u5f02\u6b65 MySQL \u5de5\u5177\u7c7b\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5e38\u7528\u7684\u6570\u636e\u5e93\u64cd\u4f5c\u65b9\u6cd5\uff0c\u5185\u7f6e\u8fde\u63a5\u6c60\uff0c\u652f\u6301\u591a\u7ebf\u7a0b\u5e76\u53d1\u64cd\u4f5c\u3002</p>"},{"location":"features/mysql_util/#_1","title":"\u5355\u4f8b\u6a21\u5f0f","text":"<p><code>MysqlSingletonUtil</code> \u7c7b\u5b9e\u73b0\u4e86\u5355\u4f8b\u6a21\u5f0f\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e0e <code>MysqlUtil</code> \u76f8\u540c\u3002</p>"},{"location":"features/mysql_util/#_2","title":"\u53c2\u6570\u8be6\u89e3","text":"\u53c2\u6570\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u987b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>host</code> <code>str</code> \u662f \u6570\u636e\u5e93\u5730\u5740 <code>port</code> <code>int</code> \u5426 3306 \u6570\u636e\u5e93\u7aef\u53e3 <code>user</code> <code>str</code> \u5426 root \u6570\u636e\u5e93\u7528\u6237\u540d <code>password</code> <code>str</code> \u662f \u6570\u636e\u5e93\u5bc6\u7801 <code>db</code> <code>str</code> \u662f \u6570\u636e\u5e93\u540d <code>minsize</code> <code>int</code> \u5426 1 \u8fde\u63a5\u6c60\u6700\u5c0f\u8fde\u63a5\u6570 <code>maxsize</code> <code>int</code> \u5426 10 \u8fde\u63a5\u6c60\u6700\u5927\u8fde\u63a5\u6570 <code>echo</code> <code>bool</code> \u5426 <code>False</code> <code>pool_recycle</code> <code>int</code> \u5426 <code>-1</code>"},{"location":"features/mysql_util/#open","title":"open","text":"<p>\u5f00\u542f\u8fde\u63a5\u6c60\uff0c\u5982\u679c\u5df2\u7ecf\u5f00\u542f\u5219\u4e0d\u4f1a\u91cd\u590d\u5f00\u542f</p>"},{"location":"features/mysql_util/#close","title":"close","text":"<p>\u5173\u95ed\u8fde\u63a5\u6c60\uff0c\u5982\u679c\u5df2\u7ecf\u5173\u95ed\u5219\u4e0d\u4f1a\u91cd\u590d\u5173\u95ed</p>"},{"location":"features/mysql_util/#fetchone","title":"fetchone","text":"<pre><code>async def fetchone(\n    self, sql: str, args: typing.Optional[list | tuple] = None\n) -&gt; dict[str, typing.Any]:\n    \"\"\"\n    \u67e5\u8be2\u5355\u6761\u6570\u636e\n    :param sql: sql \u8bed\u53e5\n    :param args: list \u6216 tuple \u7c7b\u578b\u7684\u53c2\u6570\n    :return: \u5355\u6761\u7ed3\u679c\u96c6\n    \"\"\"\n</code></pre>"},{"location":"features/mysql_util/#fetchall","title":"fetchall","text":"<pre><code>async def fetchall(\n    self, sql: str, args: typing.Optional[list | tuple] = None\n) -&gt; list[dict[str, typing.Any]]:\n    \"\"\"\n    \u67e5\u8be2\u591a\u6761\u6570\u636e\n    :param sql: sql \u8bed\u53e5\n    :param args: list \u6216 tuple \u7c7b\u578b\u7684\u53c2\u6570\n    :return: \u591a\u6761\u7ed3\u679c\u96c6\n    \"\"\"\n</code></pre>"},{"location":"features/mysql_util/#execute","title":"execute","text":"<pre><code>async def execute(self, sql: str, args: typing.Optional[list | tuple] = None) -&gt; int:\n    \"\"\"\n    \u6267\u884c\u589e\u5220\u6539\u64cd\u4f5c\n    :param sql: sql \u8bed\u53e5\n    :param args: list \u6216 tuple \u7c7b\u578b\u7684\u53c2\u6570\n    :return: \u53d7\u5f71\u54cd\u7684\u884c\u6570\n    \"\"\"\n</code></pre>"},{"location":"features/mysql_util/#executemany","title":"executemany","text":"<pre><code>async def executemany(self, sql: str, args: typing.Optional[list | tuple] = None) -&gt; int:\n    \"\"\"\n    \u6279\u91cf\u6267\u884c\u589e\u5220\u6539\u64cd\u4f5c\n    :param sql: sql \u8bed\u53e5\n    :param args: ist \u6216 tuple \u7c7b\u578b\u7684\u53c2\u6570\n    :return: \u53d7\u5f71\u54cd\u7684\u884c\u6570\n    \"\"\"\n</code></pre>"},{"location":"features/pipeline/","title":"\u6570\u636e\u7ba1\u9053 - Pipeline","text":"<p>Pipeline\u662f\u6570\u636e\u5165\u5e93\u65f6\u6d41\u7ecf\u7684\u7ba1\u9053\uff0c\u7528\u6237\u53ef\u81ea\u5b9a\u4e49\uff0c\u4ee5\u4fbf\u5bf9\u63a5\u5176\u4ed6\u6570\u636e\u5e93\u3002 \u6846\u67b6\u5df2\u5185\u7f6e\u57fa\u4e8e <code>aiomysql</code> \u5c01\u88c5\u7684 <code>mysql</code> \u7ba1\u9053\uff0c\u5176\u4ed6\u7ba1\u9053\u7ee7\u627f <code>BasePipeline</code> \u7c7b\u81ea\u884c\u5b9e\u73b0\u3002</p>"},{"location":"features/pipeline/#_1","title":"\u4f7f\u7528\u65b9\u5f0f","text":"<p>\u6ce8\uff1a<code>item</code> \u4f1a\u88ab\u805a\u5408\u6210\u591a\u6761\u4e00\u8d77\u6d41\u7ecf <code>pipeline</code>\uff0c\u65b9\u4fbf\u6279\u91cf\u5165\u5e93\u3002 \u6846\u67b6\u5185\u7f6e\u7684 <code>MysqlPipeline</code> \u4f1a\u81ea\u52a8\u5165\u5e93\uff0c\u65e0\u9700\u7528\u6237\u81ea\u884c\u8c03\u7528 <code>process_item</code> \u65b9\u6cd5\u3002</p>"},{"location":"features/pipeline/#pipeline","title":"\u81ea\u5b9a\u4e49 <code>Pipeline</code>","text":"<pre><code>from maize import BasePipeline\n\n\nclass CustomPipeline(BasePipeline):\n\n    async def open(self):\n        \"\"\"\n        \u7ba1\u9053\u521d\u59cb\u5316\u65f6\u8c03\u7528\uff0c\u9700\u8981\u521d\u59cb\u5316\u7684\u5f02\u6b65\u65b9\u6cd5\u8bf7\u5728\u6b64\u5b9e\u73b0\n        @return: \n        \"\"\"\n\n    async def close(self):\n        \"\"\"\n        \u7ba1\u9053\u5173\u95ed\u65f6\u8c03\u7528\uff0c\u9700\u8981\u5173\u95ed\u7684\u5f02\u6b65\u65b9\u6cd5\u8bf7\u5728\u6b64\u5b9e\u73b0\n        @return: \n        \"\"\"\n\n    async def process_item(self, items: list[\"Item\"]):\n        \"\"\"\n        \u5904\u7406\u6570\u636e\uff0c\u9700\u8981\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\u8bf7\u5728\u6b64\u5b9e\u73b0\u3002\n        \u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u8bf7\u4f7f\u7528\u5f02\u6b65\u65b9\u6cd5\u3002\n        @param items: \n        @return: \n        \"\"\"\n\n    async def process_error_item(self, items: list[\"Item\"]):\n        \"\"\"\n        \u5904\u7406\u8d85\u8fc7\u91cd\u8bd5\u6b21\u6570\u7684\u6570\u636e\n        @param items: \n        @return: \n        \"\"\"\n</code></pre>"},{"location":"features/pipeline/#_2","title":"\u6570\u636e\u81ea\u52a8\u5165\u5e93","text":"<p>\u9700\u8981\u5728 <code>Item</code> \u4e2d\u589e\u52a0 <code>__table_name__</code> \u5b57\u6bb5\uff0c\u6b64\u5b57\u6bb5\u5bf9\u5e94\u6570\u636e\u5e93\u8868\u540d\uff0c\u6846\u67b6\u4f1a\u81ea\u52a8\u5c06\u6570\u636e\u5165\u5e93\u3002</p> <pre><code>from maize import Item, Field\n\n\nclass CustomItem(Item):\n    __table_name__ = \"custom_item\"\n    name = Field()  # \u5bf9\u5e94\u6570\u636e\u5e93\u8868\u7684\u5b57\u6bb5\n    # ...\n</code></pre>"},{"location":"features/pipeline/#pipeline_1","title":"\u6ce8\u518c <code>Pipeline</code>","text":"<p>\u53ef\u4ee5\u5728 <code>settings.py</code> \u4e2d\u8fdb\u884c\u6ce8\u518c\uff0c\u4e5f\u53ef\u4ee5\u5728 <code>spider.py</code> \u4e2d\u8fdb\u884c\u6ce8\u518c\u3002 \u5c06\u7f16\u5199\u597d\u7684 <code>pipeline</code> \u914d\u7f6e\u8fdb\u6765\uff0c\u503c\u4e3a\u7c7b\u7684\u6a21\u5757\u8def\u5f84\uff0c\u9700\u8981\u6307\u5b9a\u5230\u5177\u4f53\u7684\u7c7b\u540d</p> <pre><code># \u6570\u636e\u7ba1\u9053\uff0c\u652f\u6301\u591a\u4e2a\u6570\u636e\u7ba1\u9053\n# BasePipeline: \u9ed8\u8ba4\u6570\u636e\u7ba1\u9053\uff0c\u4e0d\u505a\u4efb\u4f55\u5904\u7406\n# MysqlPipeline: \u96c6\u6210 aiomysql \u7684\u6570\u636e\u7ba1\u9053\uff0c\u81ea\u52a8\u5165\u5e93 mysql \u6570\u636e\u5e93\nITEM_PIPELINES = [\"maize.BasePipeline\"]\n</code></pre>"},{"location":"features/redis_util/","title":"RedisUtil","text":"<p><code>RedisUtil</code> \u662f\u4e00\u4e2a\u57fa\u4e8e <code>aioredis</code> \u7684\u5f02\u6b65 <code>Redis</code> \u5de5\u5177\u7c7b\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5e38\u7528\u7684 <code>Redis</code> \u64cd\u4f5c\u65b9\u6cd5\uff0c \u5982 <code>set</code>\u3001<code>get</code> \u7b49\u3002\u9ed8\u8ba4\u5f00\u542f\u8fde\u63a5\u6c60\u3002</p>"},{"location":"features/redis_util/#_1","title":"\u5355\u4f8b\u6a21\u5f0f","text":"<p><code>ReidsSingletonUtil</code> \u7c7b\u5b9e\u73b0\u4e86\u5355\u4f8b\u6a21\u5f0f\uff0c\u4f7f\u7528\u65b9\u6cd5\u4e0e <code>RedisUtil</code> \u76f8\u540c\u3002</p>"},{"location":"features/redis_util/#_2","title":"\u53c2\u6570\u8be6\u89e3","text":"\u53c2\u6570\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u987b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>url</code> <code>str</code> \u5426 <code>None</code> \u94fe\u63a5\u5730\u5740 <code>username</code> <code>Optional[str]</code> \u5426 <code>None</code> \u7528\u6237\u540d <code>password</code> <code>Optional[str]</code> \u5426 <code>None</code> \u5bc6\u7801 <code>host</code> <code>Optional[str]</code> \u5426 <code>None</code> \u94fe\u63a5\u5730\u5740 <code>port</code> <code>Optional[int]</code> \u5426 <code>None</code> \u7aef\u53e3 <code>db</code> <code>Optional[str]</code> \u5426 <code>None</code> \u6570\u636e\u5e93"},{"location":"features/redis_util/#open","title":"open","text":"<p>\u76ee\u524d open \u4e2d\u4e0d\u8fdb\u884c\u4efb\u4f55\u64cd\u4f5c\uff0c\u4e3a\u4e86\u51cf\u5c11\u4f7f\u7528\u65f6\u7684\u5fc3\u667a\u8d1f\u62c5\uff0c\u4e0e\u6240\u6709 <code>Util</code> \u7c7b\u4e00\u6837\uff0c\u4fdd\u7559\u4e86\u5f02\u6b65 <code>open</code> \u65b9\u6cd5\uff0c \u7528\u6237\u53ef\u4ee5\u6839\u636e\u9700\u8981\u5728\u6b64\u5904\u8fdb\u884c\u4e00\u4e9b\u5f02\u6b65\u521d\u59cb\u5316\u64cd\u4f5c\u3002</p> <pre><code>async def open(self):\n    \"\"\"\n    \u53ef\u4ee5\u5728\u6b64\u5904\u8fdb\u884c\u4e00\u4e9b\u5f02\u6b65\u521d\u59cb\u5316\u64cd\u4f5c\n    :return: \n    \"\"\"\n</code></pre>"},{"location":"features/redis_util/#close","title":"close","text":"<pre><code>async def close(self):\n    \"\"\"\n    \u5173\u95ed\u8fde\u63a5\u6c60\n    :return: \n    \"\"\"\n</code></pre>"},{"location":"features/redis_util/#set","title":"set","text":"<pre><code>async def set(\n    self,\n    name: KeyT,\n    value: EncodableT,\n    ex: Optional[ExpiryT] = None,\n    px: Optional[ExpiryT] = None,\n    nx: bool = False,\n    xx: bool = False,\n    keepttl: bool = False,\n):\n    \"\"\"\n    \u5c06\u5173\u952e\u5b57 `name` \u7684\u503c\u8bbe\u7f6e\u4e3a `value`\n    :param name:\n    :param value:\n    :param ex: \u8bbe\u7f6e\u952e `name` \u7684\u8fc7\u671f\u6807\u5fd7\u4e3a `ex` \u79d2\u3002\n    :param px: \u8bbe\u7f6e\u952e `name` \u7684\u8fc7\u671f\u6807\u5fd7\uff0c\u8fc7\u671f\u65f6\u95f4\u4e3a `px` \u6beb\u79d2\u3002\n    :param nx: \u5982\u679c\u8bbe\u7f6e\u4e3a True\uff0c\u5219\u5c06\u952e `name` \u7684\u503c\u8bbe\u7f6e\u4e3a `value`\uff0c\u524d\u63d0\u662f\u8be5\u503c\u4e0d\u5b58\u5728\u3002\n    :param xx: \u5982\u679c\u8bbe\u7f6e\u4e3a True\uff0c\u5219\u5c06\u952e `name` \u7684\u503c\u8bbe\u7f6e\u4e3a `value`\uff0c\u524d\u63d0\u662f\u8be5\u503c\u5df2\u7ecf\u5b58\u5728\u3002\n    :param keepttl: \u5982\u679c\u4e3a True\uff0c\u5219\u4fdd\u7559\u4e0e\u5bc6\u94a5\u76f8\u5173\u7684\u5b58\u6d3b\u65f6\u95f4\u3002\n    :return:\n    \"\"\"\n</code></pre>"},{"location":"features/redis_util/#nx_set","title":"nx_set","text":"<pre><code>async def nx_set(\n    self,\n    name: KeyT,\n    value: EncodableT,\n    ex: Optional[ExpiryT] = None,\n):\n    \"\"\"\n    nx set\n    @param name: \n    @param value: \n    @param ex: \n    @return: \n    \"\"\"\n</code></pre>"},{"location":"features/redis_util/#get","title":"get","text":"<pre><code>async def get(self, name: KeyT):\n    \"\"\"\n    \u8fd4\u56de\u952e `name` \u7684\u503c\uff0c\u5982\u679c\u952e\u4e0d\u5b58\u5728\uff0c\u5219\u8fd4\u56de None\n    :param name:\n    :return:\n    \"\"\"\n</code></pre>"},{"location":"features/redis_util/#delete","title":"delete","text":"<pre><code>async def delete(self, *names: KeyT):\n    \"\"\"\n    Delete one or more keys specified by ``names``\n    @param names:\n    @return:\n    \"\"\"\n</code></pre>"},{"location":"features/request/","title":"\u8bf7\u6c42 - Request","text":""},{"location":"features/request/#_1","title":"\u7b80\u4ecb","text":"<p><code>Request</code> \u4e3a <code>maize</code> \u4e3a\u4e86\u9002\u914d\u4e0d\u540c\u4e0b\u8f7d\u5668\u5bf9\u8bf7\u6c42\u8fdb\u884c\u7684\u5c01\u88c5\u3002 \u53ef\u4ee5\u5728\u722c\u866b\u7684 <code>start_requests</code>, <code>parse</code> \u8fd4\u56de <code>Request</code>\uff0c \u5f15\u64ce\u4f1a\u5c06\u8bf7\u6c42\u5165\u961f\uff0c\u8fdb\u884c\u8bf7\u6c42\u4e0b\u8f7d\u3002</p>"},{"location":"features/request/#_2","title":"\u53c2\u6570\u8be6\u89e3","text":"<p>\u8bf7\u6ce8\u610f\uff0c<code>Request</code> \u4e2d\u53c2\u6570\u7684\u4f18\u5148\u7ea7\u9ad8\u4e8e\u9879\u76ee\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u53c2\u6570\u3002\u6bd4\u5982\uff1a<code>proxy</code></p> \u53c2\u6570\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u987b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>url</code> <code>str</code> \u662f \u8bf7\u6c42\u7684 <code>url</code> <code>method</code> <code>str</code> \u5426 <code>GET</code> \u8bf7\u6c42\u65b9\u5f0f\uff0c\u5982 <code>GET</code>, <code>POST</code>, <code>PUT</code> <code>callback</code> <code>Callable</code> \u5426 <code>parse</code> \u81ea\u5b9a\u4e49\u7684\u89e3\u6790\u51fd\u6570\uff0c\u9ed8\u8ba4\u4e3a <code>parse</code> <code>priority</code> <code>int</code> \u5426 <code>None</code> \u8bf7\u6c42\u4f18\u5148\u7ea7\uff0c\u9ed8\u8ba4\u4e3a <code>0</code> <code>headers</code> <code>dict</code> \u5426 <code>None</code> \u8bf7\u6c42\u5934 <code>params</code> <code>dict</code> \u5426 <code>None</code> \u8bf7\u6c42\u53c2\u6570 <code>data</code> <code>dict</code> <code>str</code> \u5426 <code>None</code> <code>json</code> <code>dict</code> \u5426 <code>None</code> <code>dict</code> \u7c7b\u578b\u7684 <code>body</code> <code>cookies</code> <code>dict</code> \u5426 <code>None</code> \u8bf7\u6c42 <code>cookies</code> <code>proxy</code> <code>str</code> \u5426 <code>None</code> \u4ee3\u7406 <code>ip</code> <code>proxy_username</code> <code>str</code> \u5426 <code>None</code> \u4ee3\u7406 <code>ip</code> \u7528\u6237\u540d <code>proxy_password</code> <code>str</code> \u5426 <code>None</code> \u4ee3\u7406 <code>ip</code> \u5bc6\u7801 <code>encoding</code> <code>str</code> \u5426 <code>utf-8</code> \u7f16\u7801\uff0c\u5f53\u65e0\u6cd5\u89e3\u6790\u65f6\uff0c\u4f7f\u7528\u54cd\u5e94\u4e2d\u7684\u7f16\u7801\u5c1d\u8bd5\uff0c\u5982\u8fd8\u65e0\u6cd5\u89e3\u6790\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38 <code>meta</code> <code>dict</code> \u5426 <code>None</code> \u81ea\u5b9a\u4e49\u6570\u636e\uff0c\u4f1a\u4f20\u9012\u5230 <code>Response</code> \u4e2d\uff0c\u53ef\u5728 <code>Response</code> \u4e2d\u83b7\u53d6\u5230"},{"location":"features/request/#_3","title":"\u65b9\u6cd5\u8be6\u89e3","text":"<p>\u8bbe\u7f6e\u548c\u83b7\u53d6\u81ea\u5b9a\u4e49\u6570\u636e\uff0c\u53ef\u4ee5\u5728\u4e0b\u8f7d\u540e\u7684 <code>Response</code> \u4e2d\u83b7\u53d6\u5230</p> <pre><code>from maize import Request\n\n# \u8bbe\u7f6e meta\nrequest = Request(\"url\", meta={\"a\": 1})\n\n# \u83b7\u53d6 meta\nmeta = request.meta\n</code></pre>"},{"location":"features/response/","title":"\u54cd\u5e94 - Response","text":""},{"location":"features/response/#_1","title":"\u7b80\u4ecb","text":"<p><code>Response</code> \u4e3a <code>maize</code> \u4e3a\u9002\u914d\u4e0d\u540c\u4e0b\u8f7d\u5668\u5bf9\u54cd\u5e94\u8fdb\u884c\u7684\u5c01\u88c5\u3002 \u722c\u866b <code>parse</code> \u65b9\u6cd5\u4e2d\uff0c\u4f1a\u8fd4\u56de <code>Response</code> \u7c7b\u578b\u7684\u53c2\u6570\uff0c\u60a8\u53ef\u4ee5\u5bf9\u54cd\u5e94\u8fdb\u884c\u5bf9\u5e94\u5bf9\u89e3\u6790\u548c\u5904\u7406</p>"},{"location":"features/response/#_2","title":"\u53c2\u6570\u8be6\u89e3","text":"\u53c2\u6570\u540d \u7c7b\u578b \u662f\u5426\u5fc5\u987b \u9ed8\u8ba4\u503c \u8bf4\u660e <code>url</code> <code>str</code> \u662f \u8bf7\u6c42\u7684 <code>url</code> <code>headers</code> <code>dict</code> \u662f \u54cd\u5e94\u5934 <code>request</code> <code>Request</code> \u662f \u8bf7\u6c42 <code>Request</code> <code>body</code> <code>bytes</code> \u5426 <code>b\"\"</code> \u54cd\u5e94\u4f53 <code>status</code> <code>int</code> \u5426 <code>200</code> \u54cd\u5e94\u72b6\u6001\u7801\uff0c\u5982 <code>200</code>"},{"location":"features/response/#_3","title":"\u65b9\u6cd5\u8be6\u89e3","text":""},{"location":"features/response/#text","title":"<code>text</code>","text":"<p>\u8fd4\u56de\u5b57\u7b26\u4e32\u7c7b\u578b\u7684\u54cd\u5e94\u4f53</p>"},{"location":"features/response/#json","title":"<code>json</code>","text":"<p>\u57fa\u4e8e <code>ujson</code> \u8fd4\u56de\u683c\u5f0f\u5316\u7684 <code>json</code> \u7c7b\u578b\u7684\u6570\u636e</p>"},{"location":"features/response/#urljoin","title":"<code>urljoin</code>","text":"<p>\u57fa\u4e8e <code>urllib</code> \u7684 <code>urljoin</code> \u65b9\u6cd5\u62fc\u63a5 <code>url</code>\u3002 \u8fd4\u56de\u4e00\u4e2a\u7edd\u5bf9\u8def\u5f84\u7684 <code>url</code>\uff0c\u65e0\u9700\u60a8\u5224\u65ad\u4f20\u5165\u7684\u65f6\u76f8\u5bf9\u8def\u5f84\u8fd8\u662f\u7edd\u5bf9\u8def\u5f84</p>"},{"location":"features/response/#xpath","title":"<code>xpath</code>","text":"<p>\u57fa\u4e8e <code>parsel</code> \u7684 <code>Selector</code> \u5bf9\u54cd\u5e94\u4f53\u89e3\u6790\uff0c\u8fd4\u56de\u6570\u636e\u683c\u5f0f\u4e3a\uff1a<code>SelectorList[Selector]</code></p>"},{"location":"features/response/#meta","title":"<code>meta</code>","text":"<p><code>property</code> \u7c7b\u578b\u7684\u65b9\u6cd5\u3002\u8fd4\u56de\u60a8\u5728\u8bf7\u6c42\u4e2d\u4f20\u5165\u7684\u81ea\u5b9a\u4e49\u6570\u636e</p>"},{"location":"features/response/#cookies","title":"<code>cookies</code>","text":"<p>\u8fd4\u56de\u5b57\u5178\u7c7b\u578b\u7684 <code>cookies</code>\uff0c\u5176\u4e2d</p> <ul> <li><code>key</code> \u4e3a <code>cookie</code> \u7684 <code>name</code></li> <li><code>value</code> \u4e3a <code>cookie</code> \u7684 <code>value</code></li> </ul>"},{"location":"features/response/#cookie_list","title":"<code>cookie_list</code>","text":"<p>\u8fd4\u56de\u5217\u8868\u7c7b\u578b\u7684 <code>cookies</code>\uff0c\u56e0\u67d0\u4e9b\u7f51\u7ad9\u8fd4\u56de\u7684 <code>ccokies</code> \u4e2d\u5b58\u5728\u591a\u4e2a <code>name</code> \u76f8\u540c\u7684\u503c\uff0c\u6240\u4ee5\u8fd4\u56de\u5217\u8868\u7c7b\u578b\uff0c\u65b9\u4fbf\u81ea\u5b9a\u4e49\u66f4\u7cbe\u7ec6\u7684\u5904\u7406\u903b\u8f91\u3002 \u793a\u4f8b\uff1a</p> <pre><code>[\n    {\n        \"key\": \"\",\n        \"value\": \"\",\n        \"domain\": \"\",\n        \"path\": \"\",\n        \"expires\": \"\",\n        \"secure\": \"\",\n        \"httponly\": \"\",\n    },\n    ...\n]\n</code></pre>"},{"location":"features/settings/","title":"\u914d\u7f6e\u6587\u4ef6","text":"<p>\u914d\u7f6e\u6587\u4ef6\u4f4d\u4e8e <code>project/settings.py</code>\uff0c\u4e0e <code>run.py</code> \u6216 <code>settings.py</code> \u540c\u7ea7\u3002 \u540c\u6837\u7684\uff0c\u4e5f\u53ef\u4ee5\u5728 <code>Spider</code> \u4e2d\u7684 <code>custom_settings</code> \u4e2d\u8fdb\u884c\u8bbe\u7f6e\uff0c\u4f18\u5148\u7ea7\u9ad8\u4e8e <code>settings.py</code>\u3002</p> <pre><code>from maize import Spider\n\n\nclass CustomSpider(Spider):\n    custom_settings = {\n        # \u5e76\u53d1\u6570\n        'CONCURRENCY': 2,\n\n        # \u662f\u5426\u9a8c\u8bc1 SSL \u8bc1\u4e66\n        'VERIFY_SSL': False,\n\n        # \u8bf7\u6c42\u8d85\u65f6\u65f6\u95f4\n        'REQUEST_TIMEOUT': 30,\n\n        # \u662f\u5426\u4f7f\u7528 session\n        'USE_SESSION': False,\n\n        # ...\n    }\n\n    # ...\n</code></pre> <p>\u6216\u8005\u81ea\u5b9a\u4e49 <code>Settings</code> \u7c7b\u3002\u60a8\u53ef\u4ee5\u7ee7\u627f <code>BaseSettings</code> \u6216\u8005\u4e0d\u7ee7\u627f\uff0c\u5177\u4f53\u8bf7\u770b\u4e0b\u9762\u7684\u793a\u4f8b\u3002 \u5982\u679c\u60a8\u7ee7\u627f\u4e86 <code>BaseSettings</code>\uff0c\u90a3\u4e48\u60a8\u53ef\u4ee5\u83b7\u5f97\u66f4\u597d\u7684\u4ee3\u7801\u63d0\u793a\u3002\u5982\u679c\u60a8\u4e0d\u7ee7\u627f\uff0c\u90a3\u4e48\u60a8\u9700\u8981\u6ce8\u610f\uff0c\u4e0d\u8981\u5c06\u914d\u7f6e\u9879\u547d\u540d\u5199\u9519\u3002</p> \u7ee7\u627f <code>BaseSettings</code>\u4e0d\u7ee7\u627f <code>BaseSettings</code> <pre><code>from maize import BaseSettings\n\n\nclass Settings(BaseSettings):\n    CONCURRENCY = 1\n    ...\n</code></pre> <pre><code>class Settings:\n    CONCURRENCY = 1\n    ...\n</code></pre> <p>\u9ed8\u8ba4\u914d\u7f6e\u5982\u4e0b\uff1a</p> <pre><code>class BaseSettings:\n    # \u5e76\u53d1\u6570\n    CONCURRENCY: int = 1\n\n    # \u662f\u5426\u9a8c\u8bc1 SSL \u8bc1\u4e66\n    VERIFY_SSL: bool = True\n\n    # \u8bf7\u6c42\u8d85\u65f6\u65f6\u95f4\n    REQUEST_TIMEOUT: int = 60\n\n    # \u662f\u5426\u4f7f\u7528 session\n    # \u6ce8\u610f\uff1a\u57fa\u4e8e httpx \u7684\u4e0b\u8f7d\u5668\uff08HTTPXDownloader\uff09\u4e0d\u652f\u6301 session\uff0c\u6240\u4ee5\u6b64\u9009\u9879\u65e0\u6548\n    USE_SESSION: bool = True\n\n    # \u4e0b\u8f7d\u5668\n    # \u57fa\u4e8e aiohttp \u5c01\u88c5\u7684\u4e0b\u8f7d\u5668\uff1amaize.AioHttpDownloader\n    # \u57fa\u4e8e httpx \u5c01\u88c5\u7684\u4e0b\u8f7d\u5668\uff1amaize.HTTPXDownloader\n    DOWNLOADER: str = \"maize.AioHttpDownloader\"\n\n    # \u65e5\u5fd7\u7ea7\u522b\uff0c\u4e0e logging \u65e5\u5fd7\u7ea7\u522b\u76f8\u540c\n    # \u5982\u679c\u60a8\u4f7f\u7528\u81ea\u5b9a\u4e49\u65e5\u5fd7\u5904\u7406\u6a21\u5757\uff0c\u6b64\u9009\u9879\u65e0\u6548\uff0c\u8bf7\u60a8\u5728\u81ea\u5b9a\u4e49\u65e5\u5fd7\u5904\u7406\u6a21\u5757\u4e2d\u8bbe\u7f6e\u65e5\u5fd7\u7ea7\u522b\n    LOG_LEVEL: str = \"INFO\"\n\n    # # \u65e5\u5fd7 handler\n    # # \u5982\u4e0d\u60f3\u4f7f\u7528\u9ed8\u8ba4\u7684 logging \u6a21\u5757\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u65e5\u5fd7\u5904\u7406\u6a21\u5757\n    # LOGGER_HANDLER: str = \"\"\n\n    # \u8bf7\u6c42\u6700\u5927\u91cd\u8bd5\u6b21\u6570\n    MAX_RETRY_COUNT: int = 0\n\n    # item\u5728\u5185\u5b58\u961f\u5217\u4e2d\u6700\u5927\u7f13\u5b58\u6570\u91cf\n    ITEM_MAX_CACHE_COUNT: int = 5000\n\n    # item\u6bcf\u6279\u5165\u5e93\u7684\u6700\u5927\u6570\u91cf\n    ITEM_HANDLE_BATCH_MAX_SIZE: int = 1000\n\n    # item\u5165\u5e93\u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\uff1a\u79d2\n    ITEM_HANDLE_INTERVAL: int = 2\n\n    # \u5165\u5e93\u5f02\u5e38\u7684 item \u6700\u5927\u91cd\u8bd5\u6b21\u6570\n    ERROR_ITEM_MAX_RETRY_COUNT: int = 5\n\n    # \u5165\u5e93\u5f02\u5e38\u7684 item \u5728\u5185\u5b58\u961f\u5217\u4e2d\u6700\u5927\u7f13\u5b58\u6570\u91cf\n    ERROR_ITEM_MAX_CACHE_COUNT: int = 5000\n\n    # \u5165\u5e93\u5f02\u5e38\u7684 item \u91cd\u8bd5\u6bcf\u6279\u5904\u7406\u7684\u6700\u5927\u6570\u91cf\n    # \u6279\u91cf\u5165\u5e93\u53ef\u80fd\u4f1a\u56e0\u4e3a\u67d0\u4e2a item \u5f02\u5e38\uff0c\u5bfc\u81f4\u6574\u6279\u6570\u636e\u65e0\u6cd5\u5165\u5e93\uff0c\u5efa\u8bae\u6bcf\u6279\u5904\u7406\u4e00\u4e2a item\n    ERROR_ITEM_RETRY_BATCH_MAX_SIZE: int = 1\n\n    # \u5165\u5e93\u5f02\u5e38\u7684 item \u8d85\u8fc7\u91cd\u8bd5\u6b21\u6570\u540e\uff0c\u6bcf\u6279\u5904\u7406\u7684\u6700\u5927\u6570\u91cf\n    ERROR_ITEM_HANDLE_BATCH_MAX_SIZE: int = 1000\n\n    # \u5904\u7406\u5165\u5e93\u5f02\u5e38\u7684 item \u65f6\u95f4\u95f4\u9694\uff0c\u5355\u4f4d\uff1a\u79d2\n    ERROR_ITEM_HANDLE_INTERVAL: int = 60\n\n    # \u6570\u636e\u7ba1\u9053\uff0c\u652f\u6301\u591a\u4e2a\u6570\u636e\u7ba1\u9053\n    # maize.BasePipeline: \u9ed8\u8ba4\u6570\u636e\u7ba1\u9053\uff0c\u4e0d\u505a\u4efb\u4f55\u5904\u7406\n    # maize.MysqlPipeline: \u96c6\u6210 aiomysql \u7684\u6570\u636e\u7ba1\u9053\uff0c\u81ea\u52a8\u5165\u5e93 mysql \u6570\u636e\u5e93\n    ITEM_PIPELINES: list[str] = [\"maize.BasePipeline\"]\n\n    # rpa\n    # \u4f7f\u7528\u4f7f\u7528 stealth js\n    RPA_USE_STEALTH_JS: bool = True\n    # stealth js \u6587\u4ef6\u8def\u5f84\n    RPA_STEALTH_JS_PATH: Path = BASE_DIR / \"utils/js/stealth.min.js\"\n\n    # \u662f\u5426\u4e3a\u65e0\u5934\u6d4f\u89c8\u5668\n    RPA_HEADLESS: bool = True\n\n    # chromium\u3001firefox\u3001webkit\n    RPA_DRIVER_TYPE: Literal[\"chromium\", \"firefox\", \"webkit\"] = \"chromium\"\n\n    # \u8bf7\u6c42\u5934\n    RPA_USER_AGENT: Optional[str] = None\n\n    # \u7a97\u53e3\u5927\u5c0f\n    RPA_WINDOW_SIZE: Tuple[int, int] = (1024, 800)\n\n    # \u6d4f\u89c8\u5668\u8def\u5f84\uff0c\u9ed8\u8ba4\u4e3a\u9ed8\u8ba4\u8def\u5f84\n    RPA_EXECUTABLE_PATH: Optional[str] = None\n\n    # \u4e0b\u8f7d\u6587\u4ef6\u7684\u8def\u5f84\n    RPA_DOWNLOAD_PATH: Optional[str] = None\n\n    # \u6e32\u67d3\u65f6\u957f\uff0c\u5373\u6253\u5f00\u7f51\u9875\u7b49\u5f85\u6307\u5b9a\u65f6\u95f4\u540e\u518d\u83b7\u53d6\u6e90\u7801\n    RPA_RENDER_TIME: Optional[int] = None\n\n    # \u81ea\u5b9a\u4e49\u6d4f\u89c8\u5668\u6e32\u67d3\u53c2\u6570\n    RPA_CUSTOM_ARGUMENT: List[str] = []\n\n    # \u8981\u8fde\u63a5\u7684 CDP websocket \u7aef\u70b9\u6216 http url\u3002\u4f8b\u5982 `http://localhost:9222/` \u6216\n    # `ws://127.0.0.1:9222/devtools/browser/387adf4c-243f-4051-a181-46798f4a46f4`.\n    RPA_ENDPOINT_URL: Optional[str] = None\n\n    # \u5c06 RPA \u64cd\u4f5c\u51cf\u6162\u6307\u5b9a\u7684\u6beb\u79d2\u6570\u3002\u5f88\u6709\u7528\uff0c\u8fd9\u6837\u60a8\u5c31\u53ef\u4ee5\u770b\u5230\u53d1\u751f\u4e86\u4ec0\u4e48\u3002\u9ed8\u8ba4\u4e3a0\u3002\n    RPA_SLOW_MO: Optional[float] = None\n\n    # \u662f\u5426\u4f7f\u7528\u5206\u5e03\u5f0f\u722c\u866b\uff0c\u5f00\u542f\u540e\uff0c\u9700\u8981\u5bf9 redis \u8fdb\u884c\u914d\u7f6e\n    IS_DISTRIBUTED: bool = False\n\n    # redis\n    USE_REDIS: bool = False\n    REDIS_HOST: str = \"localhost\"\n    REDIS_PORT: int = 6379\n    REDIS_DB: int = 0\n    REDIS_USERNAME: Optional[str] = None\n    REDIS_PASSWORD: Optional[str] = None\n\n    REDIS_KEY_PREFIX: str = \"maize\"\n    REDIS_KEY_LOCK: str = \"lock\"\n    REDIS_KEY_RUNNING: str = \"running\"\n    REDIS_KEY_QUEUE: str = \"queue\"\n\n    # # \u96a7\u9053\u4ee3\u7406\uff0c\u793a\u4f8b\uff1axxx.xxx:2132\u3002\u6ce8\u610f\uff1a\u4e0d\u5305\u542b http:// \u6216 https://\n    # PROXY_TUNNEL: str = \"\"\n    #\n    # # \u96a7\u9053\u4ee3\u7406\u7528\u6237\u540d\n    # PROXY_TUNNEL_USERNAME: str = \"\"\n    #\n    # # \u96a7\u9053\u4ee3\u7406\u5bc6\u7801\n    # PROXY_TUNNEL_PASSWORD: str = \"\"\n\n    # # mysql\u6570\u636e\u5e93\u914d\u7f6e\n    # MYSQL_HOST: str = \"localhost\"\n    # MYSQL_PORT: str | int = 3306\n    # MYSQL_DB: str = \"\"\n    # MYSQL_USER: str = \"\"\n    # MYSQL_PASSWORD: str = \"\"\n</code></pre>"},{"location":"features/spider/","title":"Spider \u8fdb\u9636","text":""},{"location":"features/spider/#_1","title":"\u9879\u76ee\u7ed3\u6784","text":"<p>\u4e00\u4e2a\u5b8c\u6574\u7684\u722c\u866b\u9879\u76ee\uff0c\u4e0d\u53ef\u80fd\u662f\u5355\u6587\u4ef6\u722c\u866b\uff0c\u9700\u8981\u5c06\u4e0d\u540c\u529f\u80fd\u6a21\u5757\u62c6\u5206\u51fa\u6765\uff0c\u5404\u53f8\u5176\u804c\uff0c\u4fbf\u4e8e\u5f00\u53d1\u548c\u7ef4\u62a4\u3002 \u63a8\u8350\u4f7f\u7528\u7684\u9879\u76ee\u7ed3\u6784</p> <pre><code>\u251c\u2500example_spider\n\u2502 \u2514\u2500spiders        # \u5b58\u653e\u6240\u6709\u722c\u866b\n\u2502   \u251c\u2500spiders_1.py\n\u2502   \u251c\u2500spiders_2.py\n\u2502   \u2514\u2500...\n\u251c\u2500items.py         # \u5b9a\u4e49\u722c\u866b\u89e3\u6790\u540e\u7684 Item\n\u251c\u2500settings.py      # \u9879\u76ee\u914d\u7f6e\u6587\u4ef6\n\u2514\u2500run.py           # \u542f\u52a8\u5165\u53e3\uff0cmain.py \u4e5f\u53ef\u4ee5\n</code></pre> <p>\u4e0b\u9762\u4ee5\u767e\u5ea6\u722c\u866b\u4e3a\u4f8b\uff0c\u5199\u4e00\u4e2a\u5b8c\u6574\u7684\u722c\u866b\u9879\u76ee\u3002\u76ee\u5f55\u7ed3\u6784\uff1a</p> <pre><code>\u251c\u2500baidu_spider\n\u2502 \u2514\u2500spiders        # \u5b58\u653e\u6240\u6709\u722c\u866b\n\u2502   \u2514\u2500baidu_spider.py\n\u251c\u2500items.py         # \u5b9a\u4e49\u722c\u866b\u89e3\u6790\u540e\u7684 Item\n\u251c\u2500settings.py      # \u9879\u76ee\u914d\u7f6e\u6587\u4ef6\n\u2514\u2500run.py           # \u542f\u52a8\u5165\u53e3\uff0cmain.py \u4e5f\u53ef\u4ee5\n</code></pre> baidu_spider.pyitems.pysettings.pyrun.py <pre><code>from maize import Request\nfrom maize import Spider\nfrom baidu_spider.items import BaiduItem\n\n\nclass BaiduSpider(Spider):\n    start_urls = [\"http://www.baidu.com\", \"http://www.baidu.com\"]\n\n    async def parse(self, response):\n        print(f\"parse: {response}\")\n        for i in range(1):\n            url = \"http://www.baidu.com\"\n            yield Request(url=url, callback=self.parse_page)\n\n    async def parse_page(self, response):\n        print(f\"parse_page: {response}\")\n        for i in range(1):\n            url = \"http://www.baidu.com\"\n            yield Request(url=url, callback=self.parse_detail)\n\n    async def parse_detail(self, response):\n        # print(response.text)\n        print(f\"parse_detail: {response}\")\n        item = BaiduItem()\n        item[\"url\"] = \"https://www.baidu.com\"\n        item[\"title\"] = \"\u767e\u5ea6\u4e00\u4e0b\"\n        yield item\n</code></pre> <pre><code>from maize import Field\nfrom maize import Item\n\n\nclass BaiduItem(Item):\n    url = Field()\n    title = Field()\n</code></pre> <pre><code>from maize import BaseSettings\n\n\nclass Settings(BaseSettings):\n    PROJECT_NAME = \"baidu_spider\"\n    CONCURRENCY = 1\n    LOG_LEVEL = \"DEBUG\"\n</code></pre> <pre><code>import asyncio\n\nfrom maize import CrawlerProcess\nfrom baidu_spider.spiders.baidu_spider import BaiduSpider\n\n\nasync def run():\n    process = CrawlerProcess()\n    await process.crawl(BaiduSpider)\n    await process.start()\n\n\nif __name__ == '__main__':\n    asyncio.run(run())\n</code></pre>"},{"location":"features/task_spider/","title":"TaskSpider \u4efb\u52a1\u722c\u866b","text":"<p>\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u53ef\u80fd\u4f1a\u5b58\u5728\u9700\u8981\u6301\u7eed\u6027\u7684\u83b7\u53d6\u91c7\u96c6\u4efb\u52a1\uff0c\u6bcf\u6279\u4efb\u52a1\u91c7\u96c6\u5b8c\u6210\u540e\uff0c\u518d\u6b21\u4ece\u6570\u636e\u6e90\u83b7\u53d6\u6216\u8005\u751f\u6210\u4e00\u6279\u65b0\u7684\u91c7\u96c6\u4efb\u52a1\u7684\u60c5\u51b5\u3002 \u6b64\u65f6\uff0c\u4f7f\u7528\u4efb\u52a1\u722c\u866b <code>TaskSpider</code> \u4ee3\u66ff <code>Spider</code> \u666e\u901a\u722c\u866b\uff0c\u662f\u4e00\u4e2a\u66f4\u4f18\u7684\u9009\u62e9\u3002</p> <p>\u4efb\u52a1\u722c\u866b\u5728 Spider \u7684\u57fa\u7840\u4e0a\uff0c\u589e\u52a0\u4e86\u5206\u6279\u83b7\u53d6\u4efb\u52a1\u7684\u80fd\u529b\u3002</p>"},{"location":"features/task_spider/#_1","title":"\u7b80\u4ecb","text":"<p>\u4f1a\u81ea\u52a8\u8c03\u7528 <code>task_requests</code> \u65b9\u6cd5\u83b7\u53d6\u4efb\u52a1\uff0c\u7528\u6237\u9700\u8981\u91cd\u5199 <code>task_requests</code> \u65b9\u6cd5\uff0c\u8fd4\u56de\u4efb\u52a1\u5217\u8868\u3002 \u5f53 <code>task_requests</code> \u65e0\u4efb\u52a1\u65f6\uff0c\u9700\u8981\u629b\u51fa <code>StopAsyncIteration</code> \u5f02\u5e38\u6765\u7ed3\u675f\u4efb\u52a1\u83b7\u53d6\u3002</p>"},{"location":"features/task_spider/#_2","title":"\u4f7f\u7528","text":"<p>\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u4efb\u52a1\u722c\u866b\u793a\u4f8b\uff1a</p> <pre><code>import asyncio\nimport typing\n\nfrom maize import CrawlerProcess, Request, Response, TaskSpider\n\n\nclass DemoTaskSpider(TaskSpider):\n    batch = 1\n    start_urls = []\n\n    async def task_requests(self) -&gt; typing.AsyncGenerator[Request, typing.Any]:\n        # \u4f7f\u7528 batch \u6a21\u62df\u662f\u5426\u6709\u66f4\u591a\u91c7\u96c6\u4efb\u52a1\uff0c\u5b9e\u9645\u5f00\u53d1\u4e2d\uff0c\u60a8\u65e0\u9700\u4f7f\u7528 batch \u53d8\u91cf\n        if self.batch &gt; 2:\n            # \u65e0\u66f4\u591a\u91c7\u96c6\u4efb\u52a1\uff0c\u629b\u51fa StopAsyncIteration \u5f02\u5e38\u6765\u7ed3\u675f\u4efb\u52a1\u83b7\u53d6\n            raise StopAsyncIteration\n\n        for i in range(1):\n            yield Request(\"http://seehar.com\")\n        self.batch += 1\n\n    async def parse(self, response: Response):\n        print(response.text)\n\n\nasync def run():\n    process = CrawlerProcess()\n    await process.crawl(DemoTaskSpider)\n    await process.start()\n\n\nif __name__ == '__main__':\n    asyncio.run(run())\n</code></pre>"},{"location":"use/before_use/","title":"\u4f7f\u7528\u524d\u5fc5\u8bfb","text":"<p>\u63a8\u8350\u4f7f\u7528\u7684\u9879\u76ee\u7ed3\u6784</p> <pre><code>\u251c\u2500example_spider\n\u2502 \u2514\u2500spiders        # \u5b58\u653e\u6240\u6709\u722c\u866b\n\u2502   \u251c\u2500spiders_1.py\n\u2502   \u251c\u2500spiders_2.py\n\u2502   \u2514\u2500...\n\u251c\u2500items.py         # \u5b9a\u4e49\u722c\u866b\u89e3\u6790\u540e\u7684 Item\n\u251c\u2500settings.py      # \u9879\u76ee\u914d\u7f6e\u6587\u4ef6\n\u2514\u2500run.py           # \u542f\u52a8\u5165\u53e3\uff0cmain.py \u4e5f\u53ef\u4ee5\n</code></pre>"}]}